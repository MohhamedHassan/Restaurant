{"version":3,"sources":["./src/app/view/auth/auth.module.ts","./src/app/view/auth/auth-routing.module.ts","./src/app/view/auth/login/login.component.ts","./src/app/view/auth/login/login.component.html","./src/app/guards/use.guard.ts","./src/app/view/auth/register/register.component.ts","./src/app/view/auth/register/register.component.html"],"names":[],"mappings":"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","file":"src-app-view-auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegisterComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UseGuard } from 'src/app/guards/use.guard';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"\",\r\n    component:LoginComponent,\r\n    canActivate:[UseGuard]\r\n  },\r\n  {\r\n    path:\"login\",\r\n    component:LoginComponent,\r\n    canActivate:[UseGuard]\r\n  },\r\n  {\r\n    path:\"register\",\r\n    component:RegisterComponent,\r\n    canActivate:[UseGuard]\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DashboardService } from 'src/app/services/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  signinLoading=false\r\n  loginForm:FormGroup\r\n  passwordInputIcon:boolean|any=false\r\n  error:string=\"\"\r\n  signinSub:Subscription\r\n    constructor(private fb:FormBuilder,\r\n      private authservice:AuthService,\r\n      private dashboard:DashboardService,\r\n      private router:Router) { \r\n      this.loginForm = this.fb.group({\r\n        email:[\"\",Validators.required],\r\n        password:[\"\",Validators.required]\r\n      })\r\n    }\r\n  \r\n    get email() {\r\n      return this.loginForm.get(\"email\")\r\n    }\r\n    get password() {\r\n      return this.loginForm.get(\"password\")\r\n    }\r\n      ngOnInit(): void {\r\n      }\r\n    login(resgisterForm:FormGroup) {\r\n      this.signinLoading=true\r\n    this.signinSub = this.authservice.signIn(resgisterForm.value).subscribe((res:any) => {\r\n         this.signinLoading=false\r\n         this.error=\"\"\r\n         localStorage.setItem(\"token\",res.token)         \r\n         this.authservice.prepearUserData()\r\n          this.router.navigate([`/home`])      \r\n      }, (err:any) => {\r\n        this.signinLoading=false\r\n        this.error = err.error.message\r\n      })\r\n    }\r\nngOnDestroy() {\r\n  if(this.signinSub) this.signinSub.unsubscribe()\r\n}\r\n}\r\n","<div class=\"frm\" >\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login(loginForm)\">\r\n       <div class=\"form-group\">\r\n           <input placeholder=\"Email*\"\r\n            [class]=\"{'is-valid': email.errors==null && email.dirty,\r\n           'is-invalid': email.errors!=null && email.touched\r\n           }\" type=\"text\" formControlName=\"email\" class=\"form-control\">\r\n           <small class=\"pt-2 d-block\" style=\"color:#dc3545\" *ngIf=\"email.errors?.required && email.touched\">\r\n            Please enter an email.\r\n          </small>\r\n       </div>\r\n       <div class=\"form-group position-relative\">\r\n        <input placeholder=\"Password*\" [attr.type]=\"  passwordInputIcon ? 'text' : 'password'\"  [class]=\"{'is-valid': password.errors==null && password.dirty,\r\n        'is-invalid': password.errors!=null && password.touched\r\n        }\"  formControlName=\"password\" class=\"form-control\">\r\n        <i class=\"fas\" (click)=\"passwordInputIcon=!passwordInputIcon\" [class]=\"{'fa-eye':passwordInputIcon,'fa-eye-slash':!passwordInputIcon}\" ></i>\r\n        <small class=\"pt-2 d-block\" style=\"color:#dc3545\" *ngIf=\"password.errors?.required && password.touched\">\r\n         Please enter the password.\r\n       </small>\r\n    </div>\r\n    <button [disabled]=\"loginForm.invalid  \" class=\"btn btn-success w-100\" type=\"submit\">SIGN IN </button>\r\n    <div class=\"text-center\" *ngIf='signinLoading'>\r\n      <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n    <div class=\"my-3\">\r\n      <p class=\"font-weight-bold\">Dashboard Email : admin@admin.com</p>\r\n      <p class=\"font-weight-bold\">Dashboard Password : adminadmin</p>\r\n    </div>\r\n    <p *ngIf=\"error\" class=\"my-3 alert alert-danger\">\r\n        {{error}}\r\n    </p>\r\n    </form>\r\n  </div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UseGuard implements CanActivate {\r\n  constructor(private authservice:AuthService) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if(this.authservice.isLogin()) {\r\n          return false\r\n      }\r\n      return true;\r\n  }\r\n  \r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DashboardService } from 'src/app/services/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n\r\n  createAcountForm: FormGroup | any\r\n  passwordInputIcon: boolean = true\r\n  confirmPasswordInputIcon: boolean = true\r\n  error: string = \"\"\r\n  signupLoading = false\r\n  signupSub: Subscription\r\n  signinSub: Subscription\r\n  constructor(private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private dashboard: DashboardService) {\r\n    this.createAcountForm = this.fb.group({\r\n      firstName: [\"\", [Validators.required]],\r\n      lastName: [\"\", [Validators.required]],\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: [\"\", [Validators.required]],\r\n      phoneNumber: [\"\", [Validators.required, Validators.pattern(/^1\\d{9}$/)]],\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  get firstName() {\r\n    return this.createAcountForm.get(\"firstName\");\r\n  }\r\n  get lastName() {\r\n    return this.createAcountForm.get(\"lastName\");\r\n  }\r\n  get email() {\r\n    return this.createAcountForm.get(\"email\");\r\n  }\r\n  get password() {\r\n    return this.createAcountForm.get(\"password\");\r\n  }\r\n  get confirmPassword() {\r\n    return this.createAcountForm.get(\"confirmPassword\");\r\n  }\r\n  get phoneNumber() {\r\n    return this.createAcountForm.get(\"phoneNumber\");\r\n  }\r\n  createAcount(f: FormGroup) {\r\n    this.signupLoading = true\r\n    let usernameAndPassword = {\r\n      email: f.value.email,\r\n      password: f.value.password\r\n    }\r\n    this.signupSub = this.authService.signUp(f.value).subscribe((res: any) => {\r\n      this.error = \"\"\r\n      this.signinSub = this.authService.signIn(usernameAndPassword).subscribe((res: any) => {\r\n        this.signupLoading = false\r\n        localStorage.setItem(\"token\", res.token)\r\n        this.authService.prepearUserData()\r\n        this.router.navigate([`/home`])      \r\n      })\r\n    }, (err: any) => {\r\n      this.signupLoading = false\r\n      this.error = err.error.message\r\n    })\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.signinSub) this.signinSub.unsubscribe()\r\n    if (this.signupSub) this.signupSub.unsubscribe()\r\n  }\r\n\r\n}\r\n","<div class=\"frm\">\r\n    <form [formGroup]=\"createAcountForm\" (ngSubmit)=\"createAcount(createAcountForm)\">\r\n        <div class=\"form-group\" >\r\n           <input [class]=\"{'is-valid': firstName.errors==null && firstName.dirty,\r\n           'is-invalid': firstName.errors!=null && firstName.touched\r\n           }\" \r\n            formControlName=\"firstName\"\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"First Name*\">   \r\n            <small class=\"pt-2 d-block\" style=\"color:#dc3545\" *ngIf=\"firstName.errors!=null && firstName.touched\">\r\n              Please enter your first name.\r\n            </small> \r\n            \r\n        </div>\r\n        <div class=\"form-group\" >\r\n          <input formControlName=\"lastName\" \r\n          [class]=\"{'is-valid': lastName.errors==null && lastName.dirty,\r\n          'is-invalid': lastName.errors!=null && lastName.touched\r\n          }\" class=\"form-control\" type=\"text\" placeholder=\"Last Name*\">\r\n          <small class=\"pt-2 d-block\" style=\"color:#dc3545\" *ngIf=\"lastName.errors!=null && lastName.touched\">\r\n            Please enter your last name.\r\n          </small>\r\n       </div>\r\n  \r\n  \r\n       <div class=\"form-group\" >\r\n       <div class=\"d-flex\">\r\n         <p class=\"bg-secondary m-0 p-2 text-white\">0</p>\r\n        <input\r\n        [class]=\"{'is-valid': phoneNumber.errors==null && phoneNumber.dirty,\r\n       'is-invalid': phoneNumber.errors!=null && phoneNumber.touched\r\n       }\"\r\n        class=\"form-control\"\r\n        formControlName=\"phoneNumber\"\r\n        type=\"number\"\r\n        min=\"1\"\r\n        oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"\r\n        maxlength=\"10\"\r\n        placeholder=\"Mobile Number*\">\r\n       </div>\r\n        <small class=\"pt-2 d-block\" style=\"color:#dc3545\"  *ngIf=\"phoneNumber.touched &&phoneNumber.errors?.required  \">Please Provide your mobile number</small>\r\n        <small class=\"pt-2 d-block\" style=\"color:#dc3545\"  *ngIf=\"phoneNumber.touched &&phoneNumber.errors?.pattern  \">\r\n         mobile should consist of 10 digits and start with 1\r\n        </small>\r\n     </div>\r\n     <div class=\"form-group\" >\r\n      <input [class]=\"{'is-valid': email.errors==null && email.dirty,\r\n      'is-invalid': email.errors!=null && email.touched\r\n      }\" class=\"form-control\" type=\"email\" formControlName=\"email\" placeholder=\"Email*\">\r\n      <small class=\"pt-2 d-block\" style=\"color:#dc3545\" *ngIf=\"email.errors?.required && email.touched\">\r\n        Please enter an email.\r\n      </small> \r\n      <small class=\"pt-2 d-block\" style=\"color:#dc3545\" *ngIf=\"email.errors?.email && email.touched\">\r\n        Please enter a valid email.\r\n      </small>\r\n   </div>\r\n   <div class=\"form-group position-relative\" >\r\n    <input [class]=\"{'is-valid': password.errors==null && password.dirty,\r\n    'is-invalid': password.errors!=null && password.touched\r\n    }\" class=\"form-control\"  [attr.type]=\"  passwordInputIcon ? 'password' : 'text'\" formControlName=\"password\" placeholder=\"Password*\">\r\n    <i class=\"fas\" (click)=\"passwordInputIcon=!passwordInputIcon\" [class]=\"{'fa-eye':passwordInputIcon,'fa-eye-slash':!passwordInputIcon}\" ></i>\r\n    <small class=\"pt-2 d-block\" style=\"color:#dc3545\" *ngIf=\"password.errors?.required && password.touched\">\r\n      Please enter your password.\r\n    </small> \r\n    <small class=\"pt-2 d-block\" style=\"color:#dc3545\" *ngIf=\"password.errors?.minlength && password.touched\">\r\n     min length 6\r\n    </small>\r\n  </div>\r\n  <div class=\"form-group position-relative\" >\r\n    <input [class]=\"{'is-valid':  confirmPassword.dirty && password.value == confirmPassword.value && confirmPassword.value.length > 0,\r\n    'is-invalid': (confirmPassword.touched && password.value !== confirmPassword.value) || (confirmPassword.errors?.required && confirmPassword.touched)\r\n    }\" formControlName=\"confirmPassword\" class=\"form-control\" \r\n    [attr.type]=\"  confirmPasswordInputIcon ? 'password' : 'text'\" placeholder=\"Confirm Password*\">\r\n    <i  (click)=\"confirmPasswordInputIcon=!confirmPasswordInputIcon\" [class]=\"{'fa-eye':confirmPasswordInputIcon,'fa-eye-slash':!confirmPasswordInputIcon}\" class=\"fas fa-eye\"></i>\r\n    <small class=\"pt-2 d-block\" style=\"color:#dc3545\" *ngIf=\"password.value !== confirmPassword.value && confirmPassword.touched\">\r\n      Password don't match\r\n     </small>\r\n     <small class=\"pt-2 d-block\" style=\"color:#dc3545\" *ngIf=\" confirmPassword.errors?.required && confirmPassword.touched\">\r\n       required\r\n     </small>\r\n   \r\n  </div>\r\n  <button [disabled]=\" password.value !== confirmPassword.value || createAcountForm.invalid  \" class=\"btn btn-success w-100 \" type=\"submit\">\r\n    \r\n    CREATE</button>\r\n  <div class=\"text-center\" *ngIf='signupLoading'>\r\n    <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n  </div>\r\n  <p *ngIf=\"error\" class=\"my-3 alert alert-danger\">\r\n      {{error}}\r\n  </p>\r\n    </form>\r\n  </div>\r\n  "],"sourceRoot":"webpack:///"}