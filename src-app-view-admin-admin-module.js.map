{"version":3,"sources":["./src/app/view/admin/admin.module.ts","./src/app/view/admin/add-product/add-product.component.ts","./src/app/view/admin/add-product/add-product.component.html","./src/app/services/orders.service.ts","./src/app/view/admin/get-orders/get-orders.component.html","./src/app/view/admin/get-orders/get-orders.component.ts","./src/app/view/admin/modify-products/modify-products.component.html","./src/app/view/admin/modify-products/modify-products.component.ts","./src/app/Resolvers/orders.resolver.ts","./src/app/view/admin/admin-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEa;AACc;AACH;AACe;AAC3B;AACO;AACA;AACN;AACH;;AAkBlD,MAAM,WAAW;;sEAAX,WAAW;2FAAX,WAAW;+FAXb;YACP,4DAAY;YACZ,wEAAkB;YAClB,wEAAe;YACf,+EAAkB;YAClB,kEAAmB;YACpB,yEAAY;YACX,0DAAW;YACX,sEAAc;SACf;oIAEU,WAAW,mBAfpB,sFAAmB;QACnB,mFAAkB;QAClB,kGAAuB,aAGvB,4DAAY;QACZ,wEAAkB;QAClB,wEAAe;QACf,+EAAkB;QAClB,kEAAmB;QACpB,yEAAY;QACX,0DAAW;QACX,sEAAc;;;;;;;;;;;;;ACzBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgG;;;;;;;;;;;;ICAhG,0EAGE;IACE,0EAA0B;IAAA,iEAAW;IAAA,iEAAW;IAAA,iEAAW;IAAA,iEAAW;IAAA,4DAAM;IAChF,4DAAM;;;IAmBC,wEAA4D;IAAA,uDAAoB;IAAA,4DAAI;;;IAAxB,0DAAoB;IAApB,yFAAoB;;;;IAJpF,sEAAsB;IAClB,6EAAsH;IAA9G,saAAkD,sBAAsB,IAAC;IAC7E,yEACJ;IAAA,4DAAS;IACT,mHAAoF;IACxF,4DAAM;;;IADkC,0DAAsB;IAAtB,yFAAsB;;;IAetD,0EAAoD;IACnD,0EAA0B;IAAA,iEAAW;IAAA,iEAAW;IAAA,iEAAW;IAAA,iEAAW;IAAA,4DAAM;IAC9E,4DAAM;;;;IAbT,0EAAoC;IAC5B,yEAAuC;IAAA,2EAAgB;IAAA,4DAAK;IAC5D,8EAAqD;IACjD,uEAAM;IAAA,uDAAwB;IAAA,4DAAO;IACrC,4EACkE;IADvB,maAAuC;IAAlF,4DACkE;IAClE,4DAAM;IAGd,6EAAsE;IAAjC,sVAAgC;IAAC,+DAAI;IAAA,4DAAS;IACnF,8EAA4D;IAA1B,6SAAS,uBAAe,IAAC;IAAC,kEAAM;IAAA,4DAAS;IAC3E,iIAEK;IACT,4DAAM;;;IAXY,0DAAwB;IAAxB,4FAAwB;IAQZ,0DAAwB;IAAxB,2FAAwB;;;IAkB1C,wEAA4D;IACzD,2EAA+B;IAAC,wEAAY;IAAA,4DAAO;IAClD,uDAEJ;;IAAA,4DAAI;;;IAFA,0DAEJ;IAFI,gKAEJ;;;;;IAmBR,wEAAsE;IAClE,0EAA2C;IAE7C,0EAAiF;IAC/E,wEAAoD;IAAjD,sWAAwB;IAAyB,4DAAI;IACtD,0EAAsB;IACpB,0EAAwB;IACpB,uEAI4E;IAChF,4DAAM;IACR,4DAAM;IACN,0EAAsB;IACpB,0EAAwB;IACpB,uEAKyE;IAC7E,4DAAM;IACV,4DAAM;IACR,4DAAM;IACJ,4DAAM;IACV,qEAAe;;;;IAzBY,0DAAmB;IAAnB,gFAAmB;IAU9B,0DAAuE;IAAvE,iJAAuE;IAJpE,0bAGD;IAQN,0DAGO;IAHP,uXAGO;;;;IAxBvB,0EAAiF;IAC7E,yEAAuC;IAAA,uDACc;IAAA,4DAAK;IAC1D,2IA0Be;IACf,sEAAK;IAAA,6EAAmE;IAArB,0TAAoB;IAC/D,uDAAoD;IAAA,4DAAS;IAAC,4DAAM;IAChF,4DAAM;;;IA/BqC,0DACc;IADd,sJACc;IACrB,0DAAuB;IAAvB,+FAAuB;IA4B/C,0DAAoD;IAApD,kIAAoD;;;IAwBhD,wEAAkF;IAE9E,0EAA4D;IAExD,0EAA8B;IAC1B,uEAKsF;IAC1F,4DAAM;IACV,4DAAM;IAEV,qEAAe;;;;;IAZN,0DAAoB;IAApB,iFAAoB;IAIjB,0DAGE;IAHF,+WAGE;;;IAVlB,0EAAuE;IACnE,8JAce;IAEnB,4DAAM;;;;IAhBgC,0DAAgC;IAAhC,6GAAgC;;;;IAhBlF,wEAA0E;IAEtE,0EAA+I;IAC3I,wEAAsD;IAAnD,yWAA2B;IAAwB,4DAAI;IAEtD,0EAAwB;IAEpB,uEAKsF;IAE9F,4DAAM;IACF,sIAiBM;IAId,4DAAM;IACV,qEAAe;;;;IAnCgH,0DAAmB;IAAnB,gFAAmB;IAMlI,0DAGE;IAHF,wdAGE;IAIsB,0DAAyC;IAAzC,iHAAyC;;;;IAnBjF,0EACyB;IACzB,yEAAuC;IAAA,sEAAW;IAAA,4DAAK;IAEvD,yIAqCe;IACf,6EAA2E;IAArD,6TAAuB;IAA8B,sEAAW;IAAA,4DAAS;IACnG,4DAAM;;;IAvC+B,0DAA0B;IAA1B,kGAA0B;;;;IAsD3C,wEAA2F;IAEvF,0EAA4D;IACxD,0EAAwB;IACpB,uEAEyE;IAC7E,4DAAM;IACN,0EAAwB;IACpB,4EAEiH;IAAjG,iYAAkD;IAFlE,4DAEiH;IACrH,4DAAM;IACV,4DAAM;IAEV,qEAAe;;;IAbN,0DAAoB;IAApB,iFAAoB;IAGjB,0DAAsB;IAAtB,2EAAsB;;;IANtC,0EAA+E;IAC3E,8JAee;IAEnB,4DAAM;;;;IAjBiC,0DAAwC;IAAxC,qHAAwC;;;;IAVvF,wEAAoF;IAChF,0EAA8I;IAC1I,wEAA8D;IAA3D,iXAAmC;IAAwB,4DAAI;IAClE,0EAAwB;IACpB,uEAG4F;IAChG,4DAAM;IACN,sIAkBM;IACV,4DAAM;IACV,qEAAe;;;;IA5B+G,0DAAmB;IAAnB,gFAAmB;IAG9H,0DAGJ;IAHI,ggBAGJ;IAEqB,0DAAiD;IAAjD,yHAAiD;;;;IAZzF,0EACsC;IAClC,yEAAuC;IAAA,0FAA+B;IAAA,4DAAK;IAC3E,yIA6Be;IACf,6EAAmF;IAA7D,qUAA+B;IAA8B,+EAAoB;IAAA,4DAAS;IACpH,4DAAM;;;IA/BiC,0DAAkC;IAAlC,0GAAkC;;;;IAiCrE,6EAA0J;IAAhC,wUAA+B;IAAC,+EAAoB;IAAA,4DAAS;;;IAe3L,0EAAoD;IACnD,0EAA0B;IAAA,iEAAW;IAAA,iEAAW;IAAA,iEAAW;IAAA,iEAAW;IAAA,4DAAM;IAC9E,4DAAM;;;IACL,6EAAgI;IAAA,iEAAM;IAAA,4DAAS;;;IAA/F,oGAAmC;;;;IAG/E,6EAAiH;IAAzB,sUAAwB;IAAC,yEAAc;IAAA,4DAAS;;;IAAlG,oGAAmC;;;IAG7E,wEAAmE;IAAA,uDAA2B;IAAA,4DAAI;;;IAA/B,0DAA2B;IAA3B,gGAA2B;;AD9M9F,MAAM,mBAAmB;IA0B9B,YAAoB,EAAe,EACzB,MAAqB,EACtB,SAA2B,EAC1B,QAAmB,EACnB,MAAc,EACd,cAA8B,EAC9B,YAA4B;QANlB,OAAE,GAAF,EAAE,CAAa;QACzB,WAAM,GAAN,MAAM,CAAe;QACtB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAW;QACnB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAgB;QA7BtC,cAAS,GAAS,IAAI;QACtB,UAAK,GAAW,CAAC,CAAC;QAClB,iBAAY,GAAW,CAAC,CAAC;QACzB,yBAAoB,GAAW,sBAAsB;QAIrD,iBAAY,GAAQ,IAAI;QACxB,aAAQ,GAAQ,EAAE;QAClB,aAAQ,GAAY,KAAK;QACzB,uBAAkB,GAAC,KAAK;QAGxB,4BAAuB,GAAQ,EAAE;QACjC,qBAAgB,GAAQ,EAAE;QAC1B,gBAAW,GAAC,IAAI;QAChB,uBAAkB,GAAC,KAAK;QActB,kBAAkB;QAClB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;QACvD,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK;QACrD,iBAAiB;QACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,EAAO,EAAE,EAAE;YACpE,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE;gBAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI;gBAC9B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE;gBAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI;gBACvB,IAAI,CAAC,cAAc,GAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CACvE,CAAC,GAAQ,EAAE,EAAE;oBACX,IAAI,CAAC,WAAW,GAAC,KAAK;oBACtB,IAAI,CAAC,UAAU,GAAG;wBAChB,IAAI,EAAE,GAAG,CAAC,IAAI;wBACd,YAAY,EAAE,GAAG,CAAC,YAAY;wBAC9B,KAAK,EAAE,GAAG,CAAC,KAAK;wBAChB,iBAAiB,EAAE,GAAG,CAAC,iBAAiB;wBACxC,QAAQ,EAAE,GAAG,CAAC,QAAQ;wBACtB,KAAK,EAAE,GAAG,CAAC,KAAK;qBACjB;oBACD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,KAAK;oBACzB,YAAY,CAAC,eAAe,EAAE;oBAC9B,YAAY,CAAC,sBAAsB,EAAE;oBACrC,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,EAAE;wBACtF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC;wBACrE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC;wBACtE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,sBAAsB,EAAE;qBAC5D;oBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;wBAAE,IAAI,CAAC,QAAQ,EAAE;oBAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE;wBAAE,IAAI,CAAC,mBAAmB,EAAE;oBACjF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;wBAAE,IAAI,CAAC,WAAW,EAAE;oBAChE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC;gBACjD,CAAC,EACC,GAAG,CAAC,EAAE;oBACN,IAAI,CAAC,WAAW,GAAC,KAAK;oBACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;gBACpC,CAAC,CAAC;aACL;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAC,KAAK;gBACtB,IAAI,CAAC,QAAQ,GAAG,KAAK;gBACrB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;gBAC3B,IAAI,CAAC,QAAQ,GAAG,OAAO;gBACvB,IAAI,CAAC,gCAAgC,EAAE;aACxC;QACH,CAAC,CAAC;IACJ,CAAC;IACD,OAAO,CAAC,UAAc,IAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,EAAE,mBAAmB,CAAC,GAAC;IAC1F,SAAS,CAAC,QAA0B;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IACD,gBAAgB,CAAC,CAAK,EAAE,UAAc;QACpC,IAAI,CAAC,QAAQ,GAAG,KAAK;QACrB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;QAC3B,IAAI,CAAC,oBAAoB,GAAG,sBAAsB;QAClD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,EAAE,mBAAmB,CAAC;QACjE,IAAI,CAAC,QAAQ,GAAG,CAAC;QACjB,IAAI,CAAC,gCAAgC,EAAE;IACzC,CAAC;IACD,gCAAgC;QAC9B,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK;QACrD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC;QACrE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,sBAAsB,EAAE;QAC3D,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAE;YAC5B,YAAY,CAAC,eAAe,EAAE;YAC9B,YAAY,CAAC,sBAAsB,EAAE;YACrC,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,mBAAmB,EAAE;YAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE;YACvB,IAAI,CAAC,QAAQ,EAAE;SAChB;aACI,IAAI,IAAI,CAAC,QAAQ,IAAI,UAAU,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,EAAE;YACjE,YAAY,CAAC,eAAe,EAAE;YAC9B,YAAY,CAAC,sBAAsB,EAAE;YACrC,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE;YACvB,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE;YAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC,KAAK,EAAE;YAClC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACvB;aAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,EAAE;YAC7F,YAAY,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC;YAC/C,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC;YAChD,YAAY,CAAC,sBAAsB,EAAE;YACrC,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE;YACvB,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE;YAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC,KAAK,EAAE;YAClC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACvB;IACH,CAAC;IACD,QAAQ,KAAW,CAAC;IAEpB,qFAAqF;IACrF,QAAQ;QACN,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAc;IACtD,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;IAC1D,CAAC;IACD,WAAW,CAAC,KAAS;QACnB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAC;YAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;;YAC1D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,EAAE;gBAC/C,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;IACL,CAAC;IACD,mFAAmF;IAEnF,0DAA0D;IAC1D,WAAW;QACT,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAc;IACzD,CAAC;IACD,WAAW;QACT,IAAI,CAAC,YAAY,EAAE;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;QAC9D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC;IAE1C,CAAC;IACD,cAAc,CAAC,KAAS;QAEtB,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,YAAY,EAAE;SACpB;;YACI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,qBAAqB,EAAE,EAAE,EAAE;gBAClD,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;IAEL,CAAC;IACD,gBAAgB,CAAC,CAAK;QACpB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAc;IAC3D,CAAC;IACD,gBAAgB,CAAC,CAAK;QACpB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC;IAC3E,CAAC;IACD,wDAAwD;IACxD,kEAAkE;IAClE,mBAAmB;QAEjB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,mBAAmB,CAAc;IAElE,CAAC;IACD,mBAAmB;QACjB,IAAI,CAAC,KAAK,EAAE;QACZ,IAAI,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC;QAC/E,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC;QACzC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;QACrF,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC;QACzC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC;IAC5F,CAAC;IACD,sBAAsB,CAAC,KAAS;QAC9B,IAAI,CAAC,KAAK,EAAE;QACZ,IAAI,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;IAC5C,CAAC;IACD,wBAAwB,CAAC,CAAK;QAC5B,OAAO,IAAI,CAAC,mBAAmB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAc;IACnE,CAAC;IACD,wBAAwB,CAAC,CAAK;QAC5B,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,CAAC;IAC3F,CAAC;IAED,gEAAgE;IAChE,sDAAsD;IACtD,+BAA+B,CAAC,CAAK,EAAE,WAAe;QACpD,OAAO,IAAI,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC;IAChE,CAAC;IACD,wBAAwB,CAAC,CAAK,EAAE,WAAe;QAC7C,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC;IACxD,CAAC;IACD,4BAA4B,CAAC,CAAK;QAChC,OAAQ,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;IAC5F,CAAC;IACD,qBAAqB,CAAC,CAAK,EAAE,WAAe;QAC1C,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC;IACrD,CAAC;IACD,iCAAiC,CAAC,CAAK;QACrC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,IAAE,CAAC,EAAE;YACnD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC;SAC/C;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC;SAClD;IAEH,CAAC;IACD,sCAAsC,CAAC,CAAK;QAE1C,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,GAAC,CAAC,EAAE;YACjD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC;YACjD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,UAAU,CAAC;SAC7C;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,EAAE,UAAU,CAAC;SAChD;IAEH,CAAC;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC;IACxC,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC;IACzC,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC;IACzC,CAAC;IACD,oDAAoD;IAEpD,oEAAoE;IAEpE,oBAAoB,CAAC,QAAgB;QACnC,IAAI,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;QAChC,QAAQ,QAAQ,EAAE;YAChB,KAAK,MAAM;gBACT,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACvB,KAAK,EAAE,EAAE;oBACT,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAC/B,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBACvC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;oBACxB,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;oBAC3B,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;oBACpC,KAAK,EAAE,EAAE;iBACV,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,OAAO;gBACV,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACvB,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBACxD,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,UAAU;gBACb,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACvB,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAClC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;iBACzB,CAAC;gBACF,MAAM;YACR,KAAK,mBAAmB;gBACtB,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACvB,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBACnC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;iBACzB,CAAC;gBACF,MAAM;YACR,KAAK,uBAAuB;gBAC1B,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACvB,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBACxD,CAAC;gBACF,MAAM;YACR,KAAK,eAAe;gBAClB,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACvB,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBACvD,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;iBACvC,CAAC;SACL;QACD,OAAO,QAAQ;IACjB,CAAC;IACD,kEAAkE;IAClE,eAAe,CAAC,CAAK,EAAE,UAAc;QACnC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,EAAE,eAAe,CAAC;IACvF,CAAC;IACD,SAAS,CAAC,CAAK,EAAE,UAAc;QAC7B,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAErB,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACnD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,EAAE,iBAAiB,CAAC;SAChE;aACI;YACH,IAAI,CAAC,oBAAoB,GAAG,sBAAsB;YAClD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,EAAE,eAAe,CAAC;SAE9D;QACD,IAAI,CAAC,SAAS,GAAS,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,CAAC;IACD,8BAA8B;IAC9B,MAAM;QACJ,IAAI,CAAC,kBAAkB,GAAC,IAAI;QAC5B,IAAI,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK;QAC1C,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE;QAC7B,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC;QACxC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;QAC1C,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC;QACxC,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,UAAU,CAAC,YAAY,CAAC;QACxD,IAAI,IAAI,CAAC,QAAQ,IAAI,UAAU,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAE;YACxF,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC3D;aACI,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,EAAE;YAC3F,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;SAChD;QACD,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAE;YAC5B,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAChE,QAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;SACnF;QACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACrE,IAAI,CAAC,kBAAkB,GAAC,KAAK;YAC7B,IAAI,CAAC,uBAAuB,GAAC,EAAE;YACnC,IAAI,CAAC,SAAS,GAAK,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACxE,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,GAAG,CAAC,eAAe;YACtD,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAE7C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,EAAE,EAAE,EAAE;gBAClD,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;QAC5C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,kBAAkB,GAAC,KAAK;YAC5B,IAAI,CAAC,uBAAuB,GAAC,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK;QACpE,CAAC,CAAC;IACJ,CAAC;IACC,2BAA2B;IAC7B,YAAY;QACV,IAAI,CAAC,kBAAkB,GAAC,IAAI;QAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK;QACvC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC3L,IAAI,CAAC,kBAAkB,GAAC,KAAK;YAC9B,IAAI,CAAC,uBAAuB,GAAC,EAAE;YAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,4BAA4B,EAAE,EAAE,EAAE;gBACpD,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;QAC5C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,kBAAkB,GAAC,KAAK;YAC7B,IAAI,CAAC,uBAAuB,GAAC,GAAG,CAAC,KAAK,CAAC,OAAO;QAChD,CAAC,CAAC;IACJ,CAAC;IAGD,oBAAoB,CAAC,CAAK;QACxB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,WAAW,CAAC,EAAM;QAChB,IAAI,CAAC,kBAAkB,GAAC,IAAI;QAC5B,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,gBAAgB,GAAG,IAAI,QAAQ,EAAE;YACrC,gBAAgB,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC;YACnD,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC;YACnC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC/E,IAAI,CAAC,kBAAkB,GAAC,KAAK;gBAC7B,IAAI,CAAC,gBAAgB,GAAC,EAAE;gBACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,EAAE,EAAE,EAAE;oBAClD,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;YAC5C,CAAC,EAAE,GAAG,CAAC,EAAE;gBACP,IAAI,CAAC,kBAAkB,GAAC,KAAK;gBAC7B,IAAI,CAAC,gBAAgB,GAAC,GAAG,CAAC,KAAK,CAAC,OAAO;gBACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACtB,CAAC,CAAC;SACH;aACI;YACH,IAAI,CAAC,kBAAkB,GAAC,KAAK;YAC7B,KAAK,CAAC,gBAAgB,CAAC;SACxB;IAEH,CAAC;IACD,eAAe,CAAC,OAAuB;QACpC,IAAG,OAAO,CAAC,KAAK,IAAE,CAAC;YAAE,OAAO,EAAC,aAAa,EAAC,IAAI,EAAC;QAChD,OAAO,IAAI;IACd,CAAC;IACD,WAAW;QACT,IAAG,IAAI,CAAC,QAAQ;YAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;QAC7C,IAAG,IAAI,CAAC,cAAc;YAAE,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE;QACzD,IAAG,IAAI,CAAC,aAAa;YAAE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;QACvD,IAAG,IAAI,CAAC,SAAS;YAAE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;QAC/C,IAAG,IAAI,CAAC,gBAAgB;YAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;QAC7D,IAAG,IAAI,CAAC,cAAc;YAAE,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE;IAC3D,CAAC;;sFA1YU,mBAAmB;mGAAnB,mBAAmB;;QCXhC,+GAKM;QACN,yEAA4B;QACxB,oFAAwD;QACrD,4EAAW;QAAA,0EAAe;QAAA,4DAAY;QACtC,gFAAgH;QAApG,0LAAoB,+PAAoB,uCAAyC,IAA7D;QAC9B,gFAA0B;QAAA,gEAAK;QAAA,4DAAa;QAC5C,gFAA0B;QAAA,gEAAK;QAAA,4DAAa;QAC5C,iFAA2B;QAAA,kEAAM;QAAA,4DAAa;QAC9C,iFAA2B;QAAA,kEAAM;QAAA,4DAAa;QAC9C,iFAA6B;QAAA,oEAAQ;QAAA,4DAAa;QAClD,iFAA2B;QAAA,kEAAM;QAAA,4DAAa;QAChD,4DAAa;QACf,4DAAiB;QAClB,2EAA2B;QAC5B,sEAAI;QAAC,wDAAwB;;QAAA,4DAAK;QAClC,kHAKM;QACN,+MAiBgB;QAChB,4EAAyD;QAAtB,gJAAY,YAAQ,IAAC;QACpD,2EAAiB;QACb,2EAAsB;QAClB,2EAAwB;QACpB,wEAG0E;QAE9E,4DAAM;QACV,4DAAM;QACN,2EAAsB;QAEd,8GAII;QAGR,2EAA4C;QACxC,+EAAoD;QAChD,wEAAM;QAAA,wDAAwB;QAAA,4DAAO;QACzC,6EAKsK;QAApH,yRAAS,gBAAmB,IAAC,qOAAU,gCAAkC,IAA5C,yOAAwD,0BAA4B,IAApF;QAL/E,4DAKsK;QACvK,4DAAM;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,kHAgCM;QAGN,kHA2CE;QAEF,kHAkCM;QAEF,wHAAuL;QAC9L,2EAAsG;QAClG,wEAKwF;QAC5F,4DAAM;QACH,2EAAwB;QACpB,2EAG4G;QAChH,4DAAM;QACN,kHAEK;QACL,wHAA+I;QAE/I,8MAEc;QAEd,8GAAkG;QAEtG,4DAAO;QACP,4DAAM;QAEN,4DAAM;;;QA7NR,iFAAiB;QAQC,0DAAoB;QAApB,+EAAoB;QAU/B,2DAAwB;QAAxB,0JAAwB;QACvB,0DAAc;QAAd,8EAAc;QAwBd,0DAA4B;QAA5B,yFAA4B;QAIC,0DAGjB;QAHiB,sRAGjB;QAMG,0DAAc;QAAd,8EAAc;QAOC,0DAAmB;QAAnB,gFAAmB;QAE7B,0DAAwB;QAAxB,yFAAwB;QAGtB,0DAGV;QAHU,2RAGV;QAKU,0DAAgC;QAAhC,gGAAgC;QAmClD,0DAAmC;QAAnC,mGAAmC;QA6CnC,0DAA2C;QAA3C,2GAA2C;QAoCnC,0DAAmE;QAAnE,2IAAmE;QAC5D,0DAA6E;QAA7E,qJAA6E;QAEjG,0DAGC;QAHD,oPAGC;QAI0B,0DAG1B;QAH0B,uaAG1B;QAEwB,0DAAwB;QAAxB,wFAAwB;QAGzC,0DAAkB;QAAlB,+EAAkB;QAMS,0DAA6B;QAA7B,6FAA6B;;;;;;;;;;;;;;ACxNxE;AAAA;AAAA;AAAA;AAAA;AAA2D;;;AAKpD,MAAM,aAAa;IAExB,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IAExC,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,wEAAW,CAAC,MAAM,aAAa,CAAC;IAC1D,CAAC;;0EANU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;;;;;;ICAV,yEAAsC;IAAC,wEAAY;IAAA,4DAAK;;;IACxD,yEAAuC;IAAC,uDAAsB;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,iGAAsB;;;IAK9D,yEAAsC;IAAC,mEAAO;IAAA,4DAAK;;;IACnD,yEAAuC;IAAC,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,8FAAmB;;;IAK3D,yEAAsC;IAAC,kEAAM;IAAA,4DAAK;;;IAClD,yEAAuC;IAAC,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAK1D,yEAAsC;IAAC,oEAAQ;IAAA,4DAAK;;;IACpD,yEAAuC;IAAC,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,+FAAoB;;;IAG9D,oEAA4D;;;IAC5D,oEAAkE;;ACnBnE,MAAM,kBAAkB;IAM3B,YAAoB,aAA2B,EAAS,cAA6B;;QAAjE,kBAAa,GAAb,aAAa,CAAc;QAAS,mBAAc,GAAd,cAAc,CAAe;QAHvF,qBAAgB,GAAa,CAAC,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAIrE,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,IAAK,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;YACzH,IAAI,CAAC,MAAM,SAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,0CAAE,YAAY;YAClF,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,MAAM;SAE5B;IACH,CAAC;IAED,QAAQ;IACR,CAAC;;oFAfQ,kBAAkB;kGAAlB,kBAAkB;QDT/B,yEAA4B;QACxB,2EAAoE;QAGhE,2EAAuC;QACrC,4GAAwD;QACxD,4GAAmE;QACrE,qEAAe;QAGf,2EAAoC;QAClC,4GAAmD;QACnD,4GAAgE;QAClE,qEAAe;QAGf,2EAAmC;QACjC,4GAAkD;QAClD,8GAA+D;QACjE,qEAAe;QAGf,4EAAqC;QACnC,8GAAoD;QACpD,8GAAiE;QACnE,qEAAe;QAEf,8GAA4D;QAC5D,8GAAkE;QACpE,4DAAQ;QAGd,4DAAM;;QA/Be,0DAAyB;QAAzB,sFAAyB;QA0BlB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IE1B/D,qEAAiC;IAAA,kFAAuB;IAAA,4DAAK;;;IAOzD,iFAAwE;IAAA,uDAAiB;IAAA,4DAAa;;;IAA1F,mFAAuB;IAAqC,0DAAiB;IAAjB,iFAAiB;;;IAmBrF,0EAAyC;IACvC,0EAA0B;IAAA,iEAAW;IAAA,iEAAW;IAAA,iEAAW;IAAA,iEAAW;IAAA,4DAAM;IAC9E,4DAAM;;;;IAZR,0EAAoC;IAClC,yEAA2B;IAEzB,qHACF;IAAA,4DAAK;IACL,0EAA2C;IAGzC,6EAA0D;IAA1B,6TAAS,sBAAe,IAAC;IAAC,+DAAI;IAAA,4DAAS;IACzE,4DAAM;IACN,iJAEM;IACR,4DAAM;;;IAHsB,0DAAa;IAAb,gFAAa;;;;IAkBnC,2EACsD;IAApD,kdAA6C,CAAC,YAAK;IAAC,uDACtC;IAAA,4DAAO;;;;IAD+B,0DACtC;IADsC,oHACtC;;;IAKd,wEAAkD;IAChD,yEAAmB;IACjB,oEAAG;IAAE,2EAA+B;IAAA,wEAAa;IAAA,4DAAO;IAAC,uDAAa;IAAA,4DAAI;IAC1E,oEAAG;IAAA,2EAA+B;IAAA,sEAAW;IAAA,4DAAO;IAAC,uDAAyB;;IAAA,4DAAI;IACpF,4DAAM;IACR,qEAAe;;;IAH8C,0DAAa;IAAb,wFAAa;IACjB,0DAAyB;IAAzB,2JAAyB;;;IALtF,gFAAyE;IACvE,sFAAiC;IAC/B,mLAKe;IAEjB,4DAAkB;IAEpB,4DAAY;;;IAXyC,4EAAmB;IAErC,0DAAgB;IAAhB,sFAAgB;;;IAa7C,yEAAsD;IAEpD,oEAAG;IAAC,2EAA+B;IAAA,0EAAe;IAAA,4DAAO;IAAC,uDAAmB;IAAA,4DAAI;IACjF,oEAAG;IAAC,2EAA+B;IAAA,2EAAgB;IAAA,4DAAO;IAAC,uDAAyB;;IAAA,4DAAI;IAC1F,4DAAM;;;;IAFsD,0DAAmB;IAAnB,8FAAmB;IAClB,0DAAyB;IAAzB,0JAAyB;;;IAJxF,wEAAwD;IACtD,gLAIM;IACR,qEAAe;;;IALU,0DAAgB;IAAhB,sFAAgB;;;IAH7C,gFAA4E;IAC1E,sFAAoC;IAClC,kLAMe;IAEjB,4DAAkB;IAEpB,4DAAY;;;IAZ4C,4EAAmB;IAErC,0DAAmB;IAAnB,yFAAmB;;;IAkBjD,0EAAiE;IAC/D,wEAAiC;IAAC,uDAAc;IAAA,4DAAI;IACpD,oEAAG;IAAA,uDAAyB;;IAAA,4DAAI;IAClC,4DAAM;;;IAF8B,0DAAc;IAAd,yFAAc;IAC7C,0DAAyB;IAAzB,gJAAyB;;;IALlC,wEAA0E;IACxE,sEAAK;IACH,oEAAG;IAAA,2EAA+B;IAAA,yEAAc;IAAA,4DAAO;IAAC,uDAA6B;IAAA,4DAAI;IACzF,+KAGM;IACN,gEAAI;IACN,4DAAM;IACR,qEAAe;;;IAP6C,0DAA6B;IAA7B,wGAA6B;IAC/C,0DAAyB;IAAzB,+FAAyB;;;IANvE,gFAAqF;IAEnF,sFAA6C;IAC3C,kLASe;IAEjB,4DAAkB;IAEpB,4DAAY;;;IAhBqD,4EAAmB;IAGrC,0DAA4B;IAA5B,kGAA4B;;;IA2BvE,0EAAyC;IACvC,0EAA0B;IAAA,iEAAW;IAAA,iEAAW;IAAA,iEAAW;IAAA,iEAAW;IAAA,4DAAM;IAC9E,4DAAM;;;;IAZR,0EAAoC;IAClC,yEAA2B;IAEzB,qHACF;IAAA,4DAAK;IACL,0EAA2C;IAGzC,6EAA0D;IAA1B,gVAAS,uBAAe,IAAC;IAAC,+DAAI;IAAA,4DAAS;IACzE,4DAAM;IACN,kKAEM;IACR,4DAAM;;;IAHsB,0DAAa;IAAb,iFAAa;;;;IArEjD,wEAAsG;IACpG,0EAA2B;IACzB,sEAAK;IACL,0EAA0B;IACxB,qEAAgF;IAClF,4DAAM;IACJ,yEAAkC;IAAA,uDAAiB;IAAA,4DAAK;IACxD,wEAA0B;IAAA,uDACxB;;IAAA,uJAEuB;IACzB,4DAAI;IACJ,qEAAG;IAAA,wDAA4B;;IAAA,4DAAI;IACnC,iKAWY;IACZ,iKAYY;IAEZ,iKAgBY;IAEZ,iPAgBc;IACd,8EAEC;IADD,qeAAmC;IAClC,kEAAM;IAAA,4DAAS;IAChB,yEAAmF;IAA9B,oaAA6B;IAAC,4DAAI;IAEzF,4DAAM;IAER,4DAAM;IACR,qEAAe;;;;;IA9EmB,0DAAqB;IAArB,+IAAqB;IAEf,0DAAiB;IAAjB,iFAAiB;IACzB,0DACxB;IADwB,gMACxB;IAAO,0DAAqC;IAArC,qGAAqC;IAI3C,0DAA4B;IAA5B,qJAA4B;IACnB,0DAA0B;IAA1B,0FAA0B;IAY1B,0DAA6B;IAA7B,6FAA6B;IAc7B,0DAAsC;IAAtC,sGAAsC;;;;IA1E5D,wEAAyC;IAIzC,oFAA8D;IAC5D,gFAAqG;IAAxF,sXAAgD;IAC3D,gJAAsG;IACxG,4DAAa;IACf,4DAAiB;IAEf,yEAA6C;IAC3C,wEAA4D;IAAA,uDAAsC;;IAAA,4DAAK;IACvG,uEAA6F;IAApC,gZAAmC;IAAC,4DAAI;IACjG,8NAgBc;IAChB,4DAAM;IACN,0EAAkB;IAChB,6EAA4F;IAAzE,sWAAyB;IAA5C,4DAA4F;IAC9F,4DAAM;IACN,2EAAiB;IACf,yJAkFe;;IACjB,4DAAM;IACR,qEAAe;;;IAlHiD,0DAAoB;IAApB,kFAAoB;IACvB,0DAAa;IAAb,sFAAa;IAKV,0DAAsC;IAAtC,wKAAsC;IAqB/E,0DAAyB;IAAzB,uFAAyB;IAGV,0DAAqD;IAArD,2LAAqD;;AC3BxF,MAAM,uBAAuB;IAahC,YAAoB,SAA0B,EACpC,MAAqB,EACrB,MAAa,EACb,YAA4B,EAC5B,cAA6B;QAJnB,cAAS,GAAT,SAAS,CAAiB;QACpC,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAO;QACb,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,mBAAc,GAAd,cAAc,CAAe;QAdzC,iBAAY,GAAW,CAAC,CAAC;QAIzB,gBAAW,GAAQ,EAAE;QAKrB,YAAO,GAAC,KAAK;QAMT,IAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;YAC5E,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU;YACvE,IAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI;gBACrC,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;aACzC;SACF;aAAM;YACL,IAAI,CAAC,UAAU,GAAC,EAAE;SACnB;IAEF,CAAC;IACD,cAAc,CAAC,CAAK;QACnB,IAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAC,CAAC,EAAE,EAAE;gBAC5C,IAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE;oBAC/B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;iBAC3C;aACH;SACJ;IACH,CAAC;IACA,SAAS,CAAC,QAA0B;QACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IACD,QAAQ;IACR,CAAC;IACH,aAAa,CAAC,SAAa,EAAC,MAAU,EAAC,UAAc,EAAC,YAAgB;QACpE,IAAI,CAAC,OAAO,GAAC,IAAI;QAClB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;YACnF,IAAI,CAAC,OAAO,GAAC,KAAK;YACrB,IAAI,CAAC,SAAS,GAAI,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;gBAChE,IAAI,CAAC,UAAU,GAAC,GAAG,CAAC,UAAU;gBAC9B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC;gBACjC,IAAG,MAAM,IAAE,CAAC,EAAE;oBACV,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;iBAClC;gBAEH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,4BAA4B,EAAE,EAAE,EAAE;oBACrD,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;YACL,CAAC,EAAE,CAAC,GAAO,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAE;QAC5C,CAAC,EAAE,CAAC,GAAO,EAAE,EAAE;YACb,IAAI,CAAC,OAAO,GAAC,KAAK;YAClB,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;QAC1B,CAAC,CAAC;IACJ,CAAC;IACD,aAAa,CAAC,EAAM,EAAC,IAAQ;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,EAAC,EAAC,WAAW,EAAG,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,CAAC;IACvE,CAAC;IACD,cAAc,CAAC,EAAM;QACnB,IAAI,CAAC,OAAO,GAAC,IAAI;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;YACzE,IAAI,CAAC,OAAO,GAAC,KAAK;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;gBAGpE,IAAG,GAAG,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;oBACnC,IAAI,CAAC,UAAU,GAAC,GAAG,CAAC,UAAU;oBAC9B,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI;iBACtC;qBAAM;oBACL,IAAI,CAAC,UAAU,GAAC,EAAE;oBAClB,IAAI,CAAC,SAAS,CAAC,eAAe,GAAC,EAAE;iBAClC;gBAED,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,6BAA6B,EAAE,EAAE,EAAE;oBACtD,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;YACL,CAAC,EAAE,CAAC,GAAO,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAE;QAC3C,CAAC,EAAE,CAAC,GAAO,EAAE,EAAE;YACb,IAAI,CAAC,OAAO,GAAC,KAAK;YACnB,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;QACzB,CAAC,CAAC;IACH,CAAC;IAEH,WAAW;QACT,IAAG,IAAI,CAAC,gBAAgB;YAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;QAC7D,IAAG,IAAI,CAAC,SAAS;YAAE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;QAC/C,IAAG,IAAI,CAAC,WAAW;YAAE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;QACnD,IAAG,IAAI,CAAC,QAAQ;YAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;IAC/C,CAAC;;8FAjGY,uBAAuB;uGAAvB,uBAAuB;QDXpC,yEAAuB;QAEnB,iHAA6D;QAC7D,uIAuHe;QACjB,4DAAM;;QAzHC,0DAA0B;QAA1B,4FAA0B;QACf,0DAAuB;QAAvB,uFAAuB;;;;;;;;;;;;;;;;;;;;AESpC,MAAM,cAAc;IACzB,YAAoB,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;IAAG,CAAC;IAC5C,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC/D,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;IAChC,CAAC;;4EAJU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;ACTpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACC;AACmB;AACR;AACO;AACH;AACe;;;AAEtF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAC,EAAE;QACP,SAAS,EAAC,sFAAmB;QAC7B,WAAW,EAAC,CAAC,qEAAU,CAAC;KACzB;IACD;QACE,IAAI,EAAC,KAAK;QACV,SAAS,EAAC,sFAAmB;QAC7B,WAAW,EAAC,CAAC,qEAAU,CAAC;KACzB;IACD;QACE,IAAI,EAAC,QAAQ;QACb,SAAS,EAAC,mFAAkB;QAC5B,WAAW,EAAC,CAAC,qEAAU,CAAC;QACxB,OAAO,EAAC,EAAC,MAAM,EAAC,gFAAc,EAAC;KAChC;IACD;QACE,IAAI,EAAC,QAAQ;QACb,SAAS,EAAC,kGAAuB;QACjC,OAAO,EAAC,EAAC,UAAU,EAAC,wFAAkB,EAAC;QACvC,WAAW,EAAC,CAAC,qEAAU,CAAC;KACzB;CACF,CAAC;AAMK,MAAM,kBAAkB;;oFAAlB,kBAAkB;iGAAlB,kBAAkB;qGAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY","file":"src-app-view-admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { AddProductComponent } from './add-product/add-product.component';\r\nimport { GetOrdersComponent } from './get-orders/get-orders.component';\r\nimport { ModifyProductsComponent } from './modify-products/modify-products.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\n@NgModule({\r\n  declarations: [\r\n    AddProductComponent,\r\n    GetOrdersComponent,\r\n    ModifyProductsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n   SharedModule,\r\n    FormsModule,\r\n    MatTableModule,\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { Component, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { DashboardService } from 'src/app/services/dashboard.service';\r\n@Component({\r\n  selector: 'app-add-product',\r\n  templateUrl: './add-product.component.html',\r\n  styleUrls: ['./add-product.component.scss']\r\n})\r\nexport class AddProductComponent implements OnInit,OnDestroy {\r\n\r\n  addProductForm: FormGroup\r\n  imagefile: File = null\r\n  index: number = -1\r\n  toppingIndex: number = -1\r\n  inputFilePlaceholder: string = \"choose product image\"\r\n  selected: string\r\n  categoriesNames: any\r\n  updateData: any\r\n  updatedimage: any = null\r\n  fileName: any = \"\"\r\n  isUpdate: boolean = false\r\n  updateImageLoading=false\r\n  productId: any\r\n  modalRef: BsModalRef;\r\n  addOrUpdateProductError:string=\"\"\r\n  updateImageError:string=\"\"\r\n  dataLoading=true\r\n  addOrUpdateLoading=false\r\n  paramSub:Subscription\r\n  productByIdSub:Subscription\r\n  addProductSub:Subscription\r\n  getCatSub:Subscription\r\n  updateProductSub:Subscription\r\n  updateImageSub:Subscription\r\n  constructor(private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    public dashboard: DashboardService,\r\n    private renderer: Renderer2,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private modalService: BsModalService) {\r\n    // create the form\r\n    this.addProductForm = this.createAddProductForm(\"init\")\r\n    let imageControl = this.addProductForm.controls.image\r\n    // update product\r\n  this.paramSub = this.activatedRoute.queryParamMap.subscribe((id: any) => {\r\n      if (id.params.id) {\r\n        this.selected = id.params.name\r\n        this.productId = id.params.id\r\n        this.isUpdate = true\r\n     this.productByIdSub =  this.dashboard.getProductById(id.params.id).subscribe(\r\n          (res: any) => {\r\n            this.dataLoading=false\r\n            this.updateData = {\r\n              name: res.name,\r\n              descripition: res.descripition,\r\n              sizes: res.sizes,\r\n              specialsAdditions: res.specialsAdditions,\r\n              toppings: res.toppings,\r\n              price: res.price\r\n            }\r\n            this.fileName = res.image\r\n            imageControl.clearValidators()\r\n            imageControl.updateValueAndValidity()\r\n            if (this.selected == \"pasta\" || this.selected == \"desert\" || this.selected == \"salads\") {\r\n              this.addProductForm.controls.price.setValidators(Validators.required)\r\n              this.addProductForm.controls.price.setValidators(this.priceValidation)\r\n              this.addProductForm.controls.price.updateValueAndValidity()\r\n            }\r\n            for (let i = 0; i < res.sizes.length; i++) this.addSizes()\r\n            for (let i = 0; i < res.specialsAdditions.length; i++) this.addSpecialAdditions()\r\n            for (let i = 0; i < res.toppings.length; i++) this.addToppings()\r\n            this.addProductForm.patchValue(this.updateData)\r\n          }\r\n          , err => {\r\n            this.dataLoading=false\r\n            this.router.navigate([\"notFound\"])\r\n          })\r\n      } else {\r\n        this.dataLoading=false\r\n        this.isUpdate = false\r\n        this.addProductForm.reset()\r\n        this.selected = \"pizza\"\r\n        this.buildFormBasedOnSelectedCategory()\r\n      }\r\n    })\r\n  }\r\n  onfocus(fileParent:any){this.renderer.setStyle(fileParent, \"border\", \"1px solid #17a2b8\")}\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n  onSelectedChange(e:any, fileParent:any) {\r\n    this.isUpdate = false\r\n    this.addProductForm.reset()\r\n    this.inputFilePlaceholder = \"choose product image\"\r\n    this.renderer.setStyle(fileParent, \"border\", \"1px solid #ced4da\")\r\n    this.selected = e\r\n    this.buildFormBasedOnSelectedCategory()\r\n  }\r\n  buildFormBasedOnSelectedCategory() {\r\n    let priceControl = this.addProductForm.controls.price\r\n    this.addProductForm.controls.image.setValidators(Validators.required)\r\n    this.addProductForm.controls.image.updateValueAndValidity()\r\n    if (this.selected == 'pizza') {\r\n      priceControl.clearValidators()\r\n      priceControl.updateValueAndValidity()\r\n      this.addToppings()\r\n      this.addSpecialAdditions()\r\n      this.getSizes().clear()\r\n      this.addSizes()\r\n    }\r\n    else if (this.selected == 'starters' || this.selected == 'drinks') {\r\n      priceControl.clearValidators()\r\n      priceControl.updateValueAndValidity()\r\n      this.getSizes().clear()\r\n      this.addSizes()\r\n      this.getToppings().clear()\r\n      this.getSpecialAdditions().clear()\r\n      this.index = -1\r\n      this.toppingIndex = -1\r\n    } else if (this.selected == 'pasta' || this.selected == 'desert' || this.selected == 'salads') {\r\n      priceControl.setValidators(Validators.required)\r\n      priceControl.setValidators(this.priceValidation)\r\n      priceControl.updateValueAndValidity()\r\n      this.getSizes().clear()\r\n      this.getToppings().clear()\r\n      this.getSpecialAdditions().clear()\r\n      this.index = -1\r\n      this.toppingIndex = -1\r\n    }\r\n  }\r\n  ngOnInit(): void { }\r\n\r\n  //// start makeing and delete inputs for size of starters desert and drinks and pizza\r\n  getSizes(): FormArray {\r\n    return this.addProductForm.get(\"sizes\") as FormArray\r\n  }\r\n  addSizes() {\r\n    this.getSizes().push(this.createAddProductForm(\"sizes\"))\r\n  }\r\n  deleteSizes(index:any) {\r\n    if (this.getSizes().length > 1) this.getSizes().removeAt(index)\r\n    else this.toastr.warning('atleast one size', '', {\r\n      timeOut: 2000,\r\n    });\r\n  }\r\n  //// end makeing and delete inputs for size of starters desert and drinks and pizza\r\n\r\n  //// start makeing and delete inputs for toppings of pizza\r\n  getToppings(): FormArray {\r\n    return this.addProductForm.get(\"toppings\") as FormArray\r\n  }\r\n  addToppings() {\r\n    this.toppingIndex++\r\n    this.getToppings().push(this.createAddProductForm(\"toppings\"))\r\n    this.addToppingsSizes(this.toppingIndex)\r\n\r\n  }\r\n  deleteToppings(index:any) {\r\n\r\n    if (this.getToppings().length > 1) {\r\n      this.getToppings().removeAt(index)\r\n      this.toppingIndex--\r\n    }\r\n    else this.toastr.warning('atleast one topping', '', {\r\n      timeOut: 2000,\r\n    });\r\n\r\n  }\r\n  getToppingsSizes(i:any): FormArray {\r\n    return this.getToppings().at(i).get('sizes') as FormArray\r\n  }\r\n  addToppingsSizes(i:any) {\r\n    this.getToppingsSizes(i).push(this.createAddProductForm(\"toppingsSizes\"))\r\n  }\r\n  //// end makeing and delete inputs for toppings of pizza\r\n  //// start makeing and delete inputs for specialِAddition of pizza\r\n  getSpecialAdditions(): FormArray {\r\n\r\n    return this.addProductForm.get(\"specialsAdditions\") as FormArray\r\n\r\n  }\r\n  addSpecialAdditions() {\r\n    this.index++\r\n    this.getSpecialAdditions().push(this.createAddProductForm(\"specialsAdditions\"))\r\n    this.addSpecialAdditionsSizes(this.index)\r\n    this.getSpecialAdditionsSizes(this.index).controls[0].get(\"size\").setValue(\" price:\")\r\n    this.addSpecialAdditionsSizes(this.index)\r\n    this.getSpecialAdditionsSizes(this.index).controls[1].get(\"size\").setValue(\"extra price:\")\r\n  }\r\n  deleteSpecialAdditions(index:any) {\r\n    this.index--\r\n    this.getSpecialAdditions().removeAt(index)\r\n  }\r\n  getSpecialAdditionsSizes(i:any): FormArray {\r\n    return this.getSpecialAdditions().at(i).get('sizes') as FormArray\r\n  }\r\n  addSpecialAdditionsSizes(i:any) {\r\n    this.getSpecialAdditionsSizes(i).push(this.createAddProductForm(\"specialAdditionsSizes\"))\r\n  }\r\n\r\n  //// end makeing and delete inputs for specialِAddition of pizza\r\n  ///// start get inputs to add  valid or invalid clases\r\n  getSpecialAdditionForVAlidation(i:any, controlName:any) {\r\n    return this.getSpecialAdditions().controls[i].get(controlName)\r\n  }\r\n  getToppingsForVAlidation(i:any, controlName:any) {\r\n    return this.getToppings().controls[i].get(controlName)\r\n  }\r\n  getToppingSizesForValidation(i:any) {\r\n    return (this.getToppings().controls[i].get('sizes') as FormArray).controls[0].get('price')\r\n  }\r\n  getSizesForValidation(i:any, controlName:any) {\r\n    return this.getSizes().controls[i].get(controlName)\r\n  }\r\n  validationForSpecialAdditionPrice(e:any) {\r\n    if (e.target.value.length == 0 || e.target.value<=0) {\r\n      this.renderer.addClass(e.target, \"is-invalid\")\r\n    } else {\r\n      this.renderer.removeClass(e.target, \"is-invalid\")\r\n    }\r\n\r\n  }\r\n  validationForSpecialAdditionPriceKeyup(e:any) {\r\n    \r\n    if (e.target.value.length > 0 && e.target.value>0) {\r\n      this.renderer.removeClass(e.target, \"is-invalid\")\r\n      this.renderer.addClass(e.target, \"is-valid\")\r\n    } else {\r\n      this.renderer.removeClass(e.target, \"is-valid\")\r\n    }\r\n\r\n  }\r\n  get getName() {\r\n    return this.addProductForm.get(\"name\")\r\n  }\r\n  get getImage() {\r\n    return this.addProductForm.get(\"image\")\r\n  }\r\n  get getPrice() {\r\n    return this.addProductForm.get(\"price\")\r\n  }\r\n  ///// end get inputs to add  valid or invalid clases\r\n\r\n  //////////// start build dynamic form for add product   ////////////\r\n\r\n  createAddProductForm(itemType: string): FormGroup {\r\n    let formItem = this.fb.group({})\r\n    switch (itemType) {\r\n      case \"init\":\r\n        formItem = this.fb.group({\r\n          image: \"\",\r\n          name: ['', Validators.required],\r\n          descripition: ['', Validators.required],\r\n          sizes: this.fb.array([]),\r\n          toppings: this.fb.array([]),\r\n          specialsAdditions: this.fb.array([]),\r\n          price: \"\"\r\n        });\r\n        break;\r\n      case 'sizes':\r\n        formItem = this.fb.group({\r\n          size: ['', Validators.required],\r\n          price: ['', [Validators.required,this.priceValidation]]\r\n        });\r\n        break;\r\n      case 'toppings':\r\n        formItem = this.fb.group({\r\n          topping: [\"\", Validators.required],\r\n          sizes: this.fb.array([])\r\n        })\r\n        break;\r\n      case 'specialsAdditions':\r\n        formItem = this.fb.group({\r\n          addition: [\"\", Validators.required],\r\n          sizes: this.fb.array([])\r\n        })\r\n        break;\r\n      case 'specialAdditionsSizes':\r\n        formItem = this.fb.group({\r\n          size: [\"\", Validators.required],\r\n          price: [\"\", [Validators.required,this.priceValidation]],\r\n        })\r\n        break;\r\n      case 'toppingsSizes':\r\n        formItem = this.fb.group({\r\n          price: ['', [Validators.required,this.priceValidation]],\r\n          size: ['extra', [Validators.required]]\r\n        })\r\n    }\r\n    return formItem\r\n  }\r\n  //////////// end build dynamic form for add product   ////////////\r\n  onBlurInputFile(e:any, fileParent:any) {\r\n    if (!e.target.files[0]) this.renderer.setStyle(fileParent, \"border\", \"1px solid red\")\r\n  }\r\n  imageFile(e:any, fileParent:any) {\r\n    if (e.target.files[0]) {\r\n\r\n      this.inputFilePlaceholder = e.target.files[0].name;\r\n      this.renderer.setStyle(fileParent, \"border\", \"1px solid green\")\r\n    }\r\n    else {\r\n      this.inputFilePlaceholder = \"choose product image\"\r\n      this.renderer.setStyle(fileParent, \"border\", \"1px solid red\")\r\n\r\n    }\r\n    this.imagefile = <File>e.target.files[0]\r\n  }\r\n  // start add product function \r\n  submit() {\r\n    this.addOrUpdateLoading=true\r\n    let formValues = this.addProductForm.value\r\n    let formData = new FormData()\r\n    formData.append(\"image\", this.imagefile)\r\n    formData.append(\"category\", this.selected)\r\n    formData.append(\"name\", formValues.name)\r\n    formData.append(\"descripition\", formValues.descripition)\r\n    if (this.selected == 'starters' || this.selected == 'drinks' || this.selected == 'pizza') {\r\n      formData.append(\"sizes\", JSON.stringify(formValues.sizes))\r\n    }\r\n    else if (this.selected == 'pasta' || this.selected == 'desert' || this.selected == 'salads') {\r\n      formData.append(\"price\", `${formValues.price}`)\r\n    }\r\n    if (this.selected == 'pizza') {\r\n      formData.append(\"toppings\", JSON.stringify(formValues.toppings))\r\n      formData.append(\"specialsAdditions\", JSON.stringify(formValues.specialsAdditions))\r\n    }\r\n  this.addProductSub = this.dashboard.addProduct(formData).subscribe(res => {\r\n      this.addOrUpdateLoading=false\r\n      this.addOrUpdateProductError=\"\"\r\n  this.getCatSub =   this.dashboard.getCategoriesNames().subscribe((res: any) => {\r\n        this.dashboard.categoriesNames = res.categoriesNames\r\n      }, err => this.router.navigate([\"notfound\"]))\r\n\r\n      this.toastr.success('product added succesfuly', '', {\r\n        timeOut: 3000,\r\n      });\r\n      this.router.navigate(['dashboard/modify'])\r\n    }, err => {\r\n      this.addOrUpdateLoading=false\r\n       this.addOrUpdateProductError=err.error.message || err.error.error\r\n    })\r\n  }\r\n    // end add product function\r\n  updatProduct() {\r\n    this.addOrUpdateLoading=true\r\n    let values = this.addProductForm.value\r\n   this.updateProductSub = this.dashboard.updateProduct(this.productId, values.name, values.descripition, values.price, values.sizes, values.toppings, values.specialsAdditions).subscribe(res => {\r\n      this.addOrUpdateLoading=false\r\n     this.addOrUpdateProductError=\"\"\r\n      this.toastr.success('product updated succesfuly', '', {\r\n        timeOut: 3000,\r\n      });\r\n      this.router.navigate(['dashboard/modify'])\r\n    }, err => {\r\n      this.addOrUpdateLoading=false\r\n      this.addOrUpdateProductError=err.error.message\r\n    })\r\n  }\r\n\r\n \r\n  updatedImageOnChange(e:any) {\r\n    this.updatedimage = e.target.files[0]\r\n  }\r\n  updateImage(id:any) {\r\n    this.updateImageLoading=true\r\n    if (this.updatedimage) {\r\n      let updatedImageForm = new FormData()\r\n      updatedImageForm.append(\"image\", this.updatedimage)\r\n      updatedImageForm.append(\"id\", id)\r\n    this.updateImageSub = this.dashboard.updateImage(updatedImageForm).subscribe(res => {\r\n        this.updateImageLoading=false\r\n        this.updateImageError=\"\"\r\n        this.toastr.success('image updated succesfuly', '', {\r\n          timeOut: 2000,\r\n        });\r\n        this.modalRef.hide()\r\n        this.router.navigate(['dashboard/modify'])\r\n      }, err => {\r\n        this.updateImageLoading=false\r\n        this.updateImageError=err.error.message\r\n        this.modalRef.hide()\r\n      })\r\n    }\r\n    else {\r\n      this.updateImageLoading=false\r\n      alert(\"no file chosen\")\r\n    }\r\n\r\n  }\r\n  priceValidation(control:AbstractControl) {\r\n     if(control.value<=0) return {negativeValue:true}\r\n     return null\r\n  }\r\n  ngOnDestroy() {\r\n    if(this.paramSub) this.paramSub.unsubscribe()\r\n    if(this.productByIdSub) this.productByIdSub.unsubscribe()\r\n    if(this.addProductSub) this.addProductSub.unsubscribe()\r\n    if(this.getCatSub) this.getCatSub.unsubscribe()\r\n    if(this.updateProductSub) this.updateProductSub.unsubscribe()\r\n    if(this.updateImageSub) this.updateImageSub.unsubscribe()\r\n  }\r\n}\r\n","\r\n<div \r\n*ngIf=\"dataLoading\"\r\nclass=\"d-flex justify-content-center align-items-center loadinggg\"\r\n >\r\n    <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n</div>\r\n<div class=\"container pb-5\">\r\n    <mat-form-field class=\"scroll w-100\" appearance=\"fill\" >\r\n       <mat-label>Select Category</mat-label>\r\n       <mat-select [(value)]=\"selected\" (selectionChange)=\"onSelectedChange($event.value,fileParent)\" class=\"scroll\"  >\r\n         <mat-option value=\"pizza\">pizza</mat-option>\r\n         <mat-option value=\"pasta\">pasta</mat-option>\r\n         <mat-option value=\"desert\">desert</mat-option>\r\n         <mat-option value=\"salads\">salads</mat-option>\r\n         <mat-option value=\"starters\">starters</mat-option>\r\n         <mat-option value=\"drinks\">drinks</mat-option>\r\n       </mat-select>\r\n     </mat-form-field>\r\n    <div class=\"parent m-auto\">\r\n   <h2> {{selected | uppercase}}</h2>\r\n   <div *ngIf=\"isUpdate\">\r\n       <button (click)=\"openModal(template);inputFilePlaceholder='choose product image'\"  class=\"btn btn-primary w-100 my-3\">\r\n           update image\r\n       </button>\r\n       <p class=\"my-3 alert alert-danger\" *ngIf=\"updateImageError\">{{updateImageError}}</p>\r\n   </div>\r\n   <ng-template #template>\r\n      \r\n       <div class=\"modal-body text-center\">\r\n               <h3 class=\"modal-title pull-left m-0 \">choose new image</h3>\r\n               <div class=\"customFile my-3 overflow-hidden\" #parent>\r\n                   <span>{{inputFilePlaceholder}}</span>\r\n                   <input type=\"file\"  class=\" form-control\"  (blur)=\"onBlurInputFile($event,parent)\" \r\n                   (change)=\"updatedImageOnChange($event); imageFile($event,parent)\">\r\n                   </div>\r\n   \r\n         \r\n           <button class=\"btn btn-success mr-3\" (click)=\"updateImage(productId)\">done</button>\r\n           <button class=\"btn btn-secondary\" (click)=\"modalRef.hide()\">cancel</button>\r\n           <div class=\"text-center\" *ngIf='updateImageLoading'>\r\n            <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n          </div>\r\n       </div>\r\n     </ng-template>\r\n   <form [formGroup]=\"addProductForm\" (ngSubmit)=\"submit()\">\r\n       <div class=\"row\">\r\n           <div class=\"col-md-6\">\r\n               <div class=\"form-group\">\r\n                   <input type=\"text\" [ngClass]=\"{\r\n                       'is-invalid':getName.errors?.required &&  getName.touched,\r\n                       'is-valid': getName.errors ==null && getName.dirty\r\n                   }\" placeholder=\"product name\" class=\"form-control\" formControlName=\"name\">\r\n           \r\n               </div>\r\n           </div>\r\n           <div class=\"col-md-6\">\r\n            \r\n                   <p  *ngIf=\"isUpdate\" class=\"pt-2\" style=\"overflow: hidden;\">\r\n                      <span class=\"font-weight-bold\"> image name: </span>\r\n                       {{fileName | slice :23}}\r\n                      \r\n                   </p>\r\n              \r\n               \r\n               <div class=\"form-group\" [hidden]=\"isUpdate\">\r\n                   <div class=\"customFile overflow-hidden\" #fileParent>\r\n                       <span>{{inputFilePlaceholder}}</span>\r\n                   <input \r\n   \r\n                   type=\"file\" [ngClass]=\"{\r\n                       'is-invalid':getImage.errors?.required &&  getImage.touched,\r\n                       'is-valid': getImage.errors ==null && getImage.dirty\r\n                   }\" class=\"form-control\"   formControlName=\"image\" (focus)=\"onfocus(fileParent)\"  (blur)=\"onBlurInputFile($event,fileParent)\" (change)=\"imageFile($event,fileParent)\" >\r\n                  </div>\r\n               </div>\r\n           </div>\r\n       </div>\r\n       <div class=\"brdr mb-3\" *ngIf=\"getSizes().controls.length\"  formArrayName=\"sizes\">\r\n           <h2 style=\"text-transform: uppercase;\">ADD {{selected}}\r\n                {{selected == 'starters' ? 'pieces' : 'sizes' }}</h2>\r\n           <ng-container *ngFor=\"let piece of getSizes().controls;let i = index\">\r\n               <div class=\"my-2  p-3\" [formGroupName]=\"i\">\r\n   \r\n             <div class=\"row position-relative\" style=\"    border-bottom: 1px solid #d6d5d5;\">\r\n               <i (click)=\"deleteSizes(i)\" class=\"fas fa-times ss\"></i>\r\n                 <div class=\"col-md-6\">\r\n                   <div class=\"form-group\">\r\n                       <input [ngClass]=\"{\r\n                              'is-invalid':getSizesForValidation(i,'size').errors?.required && getSizesForValidation(i,'size').touched ,\r\n                              'is-valid':getSizesForValidation(i,'size').errors==null && getSizesForValidation(i,'size').dirty\r\n                           }\" formControlName=\"size\" type='text' class=\"form-control\"\r\n                           placeholder=\"{{selected == 'starters' ? 'pieces count' : 'size name'}}\">\r\n                   </div>\r\n                 </div>\r\n                 <div class=\"col-md-6\">\r\n                   <div class=\"form-group\">\r\n                       <input type=\"number\"\r\n                       \r\n                       [ngClass]=\"{\r\n                               'is-invalid':getSizesForValidation(i,'price').errors!==null && getSizesForValidation(i,'price').touched ,\r\n                               'is-valid':getSizesForValidation(i,'price').errors==null && getSizesForValidation(i,'price').dirty\r\n                            }\" formControlName=\"price\" class=\"form-control\" placeholder=\"Price\">\r\n                   </div>\r\n               </div>           \r\n             </div>\r\n               </div>\r\n           </ng-container>\r\n           <div><button class=\"btn btn-success\" type=\"button\" (click)=\"addSizes()\">\r\n                   add {{selected == 'starters' ? 'pieces ' : 'size '}}</button> </div>\r\n       </div>\r\n   \r\n    \r\n       <div *ngIf=\"getToppings().controls.length\"  class=\"brdr mb-3\" \r\n       formArrayName=\"toppings\">\r\n       <h2 style=\"text-transform: uppercase;\">add topping</h2> \r\n    \r\n       <ng-container *ngFor=\"let toping of getToppings().controls;let i = index\">\r\n         \r\n           <div class=\"my-4 px-3  position-relative\" style=\"border-bottom: 1px solid #d6d5d5;padding-top: 20px;padding-bottom: 20px;\" [formGroupName]=\"i\">\r\n               <i (click)=\"deleteToppings(i)\" class=\"fas fa-times s\"></i>\r\n           \r\n                   <div class=\"form-group\">\r\n                     \r\n                       <input \r\n                       [ngClass]=\"{\r\n                           'is-invalid':getToppingsForVAlidation(i,'topping').errors?.required &&  getToppingsForVAlidation(i,'topping').touched,\r\n                           'is-valid':getToppingsForVAlidation(i,'topping').errors==null && getToppingsForVAlidation(i,'topping').dirty\r\n                       }\"\r\n                       formControlName=\"topping\" type=\"text\" class=\"form-control\" placeholder=\"topping name\">\r\n                \r\n               </div>\r\n                   <div formArrayName=\"sizes\" *ngIf=\"getToppingsSizes(i).controls.length\">\r\n                       <ng-container *ngFor=\"let topping of getToppingsSizes(i).controls;let ii = index\">\r\n       \r\n                           <div [formGroupName]=\"ii\" class=\"d-flex align-items-center\">\r\n                          \r\n                               <div class=\"form-group w-100\">\r\n                                   <input \r\n                                   [ngClass]=\"{\r\n                                       'is-invalid':getToppingSizesForValidation(i).errors!==null && getToppingSizesForValidation(i).touched,\r\n                                       'is-valid':getToppingSizesForValidation(i).errors==null && getToppingSizesForValidation(i).dirty\r\n                                   }\" \r\n                                   type=\"number\" formControlName=\"price\" placeholder=\"extra price\" class=\"form-control\" >\r\n                               </div>\r\n                           </div>\r\n         \r\n                       </ng-container>\r\n       \r\n                   </div>\r\n               \r\n          <!--         -->\r\n             \r\n           </div>\r\n       </ng-container>\r\n       <button type=\"button\" (click)=\"addToppings()\" class=\"mt-3 btn btn-success\">add topping</button>\r\n   </div>\r\n      \r\n       <div *ngIf=\"getSpecialAdditions().controls.length\"  class=\"brdr mb-3\" \r\n           formArrayName=\"specialsAdditions\">\r\n           <h2 style=\"text-transform: uppercase;\">add Special Addition (optional)</h2> \r\n           <ng-container *ngFor=\"let addition of getSpecialAdditions().controls;let i = index\">\r\n               <div class=\"my-4 px-3 position-relative\" style=\"border-bottom: 1px solid #d6d5d5;padding-top: 20px;padding-bottom: 20px;\" [formGroupName]=\"i\">\r\n                   <i (click)=\"deleteSpecialAdditions(i)\" class=\"fas fa-times s\"></i>\r\n                   <div class=\"form-group\">\r\n                       <input [ngClass]=\"{\r\n                           'is-invalid':getSpecialAdditionForVAlidation(i,'addition').errors?.required && getSpecialAdditionForVAlidation(i,'addition').touched ,\r\n                           'is-valid':getSpecialAdditionForVAlidation(i,'addition').errors==null && getSpecialAdditionForVAlidation(i,'addition').dirty\r\n                        }\" formControlName=\"addition\" type=\"text\" class=\"form-control\" placeholder=\"addition name\">\r\n                   </div>\r\n                   <div formArrayName=\"sizes\" *ngIf=\"getSpecialAdditionsSizes(i).controls.length\">\r\n                       <ng-container *ngFor=\"let addition of getSpecialAdditionsSizes(i).controls;let ii = index\">\r\n   \r\n                           <div [formGroupName]=\"ii\" class=\"d-flex align-items-center\">\r\n                               <div class=\"form-group\">\r\n                                   <input type=\"text\"  formControlName=\"size\" \r\n                                   [attr.disabled]=\"true\" \r\n                                  style=\"border:none;width:80px;font-weight: bold;background-color: white;\">\r\n                               </div>\r\n                               <div class=\"form-group\">\r\n                                   <input \r\n                                  \r\n                                   type=\"number\"   (blur)=\"validationForSpecialAdditionPrice($event)\" formControlName=\"price\" class=\"form-control\" >\r\n                               </div>\r\n                           </div>\r\n         \r\n                       </ng-container>\r\n   \r\n                   </div>\r\n               </div>\r\n           </ng-container>\r\n           <button type=\"button\" (click)=\"addSpecialAdditions()\" class=\"mt-3 btn btn-success\">add special addition</button>\r\n       </div>\r\n      \r\n           <button  *ngIf=\"selected=='pizza' && getSpecialAdditions().controls.length==0\" type=\"button\" class=\"my-3 btn btn-success\" (click)=\"addSpecialAdditions()\">add special addition</button>\r\n    <div class=\"form-group\" [hidden]=\"selected =='pizza' || selected =='drinks' || selected =='starters'\">\r\n        <input  \r\n        [ngClass]=\"{\r\n           'is-invalid':getPrice.errors!==null && getPrice.touched,\r\n           'is-valid':getPrice.errors==null && getPrice.dirty\r\n       }\" \r\n        type=\"number\" formControlName=\"price\"  placeholder=\"product price\" class=\"form-control\">\r\n    </div>\r\n       <div class=\"form-group\">\r\n           <textarea name=\"\" id=\"\" [ngClass]=\"{\r\n           'is-invalid':addProductForm.controls.descripition.errors?.required &&  addProductForm.controls.descripition.touched,\r\n           'is-valid': addProductForm.controls.descripition.errors ==null && addProductForm.controls.descripition.dirty\r\n       }\" placeholder=\"descripition\" formControlName=\"descripition\" cols=\"30\" rows=\"5\" class=\"form-control\"></textarea>\r\n       </div> \r\n       <div class=\"text-center\" *ngIf='addOrUpdateLoading'>\r\n        <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n      </div>\r\n       <button *ngIf=\"!isUpdate ; else updateProduct\"  [disabled]=\"addProductForm.invalid\" type=\"submit\" class=\"w-100 btn btn-primary\">FINISH</button>\r\n\r\n       <ng-template #updateProduct>\r\n           <button class=\"btn btn-primary w-100\" [disabled]=\"addProductForm.invalid\" type=\"button\" (click)=\"updatProduct()\">update product</button>\r\n       </ng-template>\r\n    \r\n       <p class=\"my-3 alert alert-danger\" *ngIf=\"addOrUpdateProductError\">{{addOrUpdateProductError}}</p>\r\n       \r\n   </form>\r\n   </div> \r\n   \r\n   </div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getOrders() {\r\n    return this.http.get(`${environment.apiUrl}/api/orders`)\r\n  }\r\n}\r\n","<div class=\"container pb-5\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n      \r\n        <ng-container matColumnDef=\"orderTime\">\r\n          <th mat-header-cell *matHeaderCellDef> order time. </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.orderTime}} </td>\r\n        </ng-container>\r\n      \r\n \r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef> status </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\r\n        </ng-container>\r\n      \r\n\r\n        <ng-container matColumnDef=\"price\">\r\n          <th mat-header-cell *matHeaderCellDef> price </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.price}} </td>\r\n        </ng-container>\r\n      \r\n  \r\n        <ng-container matColumnDef=\"recieve\">\r\n          <th mat-header-cell *matHeaderCellDef> recieve </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.recieve}} </td>\r\n        </ng-container>\r\n      \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n      \r\n      \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OrdersService } from 'src/app/services/orders.service';\r\n\r\n@Component({\r\n  selector: 'app-get-orders',\r\n  templateUrl: './get-orders.component.html',\r\n  styleUrls: ['./get-orders.component.scss']\r\n})\r\nexport class GetOrdersComponent implements OnInit {\r\n\r\n  orders:any[]\r\n  displayedColumns: string[] = ['orderTime', 'status', 'price', 'recieve'];\r\n  dataSource \r\n  \r\n    constructor(private ordersService:OrdersService,private activatedRoute:ActivatedRoute) { \r\n      if (this.activatedRoute.snapshot.data.orders &&  this.activatedRoute.snapshot.data.orders.hasOwnProperty('recieveOrders')) {\r\n        this.orders = this.activatedRoute.snapshot.data.orders.recieveOrders?.pickUpOrders\r\n        this.dataSource=this.orders\r\n        \r\n      }\r\n    }\r\n  \r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<div class=\"container\">\r\n  \r\n    <h2 *ngIf=\"categories.length==0\">there are no categories</h2>\r\n    <ng-container  *ngIf=\"categories.length\">\r\n  \r\n    \r\n    \r\n    <mat-form-field class=\"scroll w-100 my-4\"  appearance=\"fill\" >\r\n      <mat-select  (selectionChange)=\"selectCategory($event.value)\" [(value)]=\"selected\"  class=\"scroll\"  >\r\n        <mat-option [value]=\"category.name\" *ngFor=\"let category of categories\">{{category.name}}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    \r\n      <div class=\"d-flex  align-items-center mb-5\">\r\n        <h2 style=\"font-size: 50px;\" class=\"mr-3 mb-0 categoryName\">{{selectedCategory.name | titlecase}}:</h2>\r\n        <i class=\"fas fa-trash-alt m-0\" style=\"font-size: 20px;\" (click)=\"openModal(deletecategory)\"></i>\r\n        <ng-template #deletecategory>\r\n    \r\n          <div class=\"modal-body text-center\">\r\n            <h2 class=\"text-secondary\">\r\n              <!-- Are you sure you want to remove this category ? -->\r\n              This function has been disabled to preserve the database\r\n            </h2>\r\n            <div class=\"d-flex justify-content-center\">\r\n              <!-- <button class=\"btn btn-secondary mr-3\" (click)=\"modalRef.hide()\">DISMISS</button>\r\n              <button class=\"btn btn-success\" (click)=\"deleteCategory(selectedCategory._id);modalRef.hide()\">CONFIRM</button> -->\r\n              <button class=\"btn btn-success\" (click)=\"modalRef.hide()\">Okay</button>\r\n            </div>\r\n            <div class=\"text-center\" *ngIf='loading'>\r\n              <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n      <div class=\"my-4\">\r\n        <input type=\"text\" [(ngModel)]=\"searchValue\" placeholder=\"search.....\" class=\"form-control\">\r\n      </div>\r\n      <div class=\"row\">\r\n        <ng-container *ngFor=\"let product of selectedCategory.products | search : searchValue ;let i = index\">\r\n          <div class=\"col-md-4 mb-5\">\r\n            <div>\r\n            <div class=\"text-center \">\r\n              <img style=\"height: 170px;\" [src]=\"product.image\" alt=\"\" class=\"img-fluid mb-4\">\r\n            </div>\r\n              <h3 class=\"font-weight-bold my-2\">{{product.name }}</h3>\r\n              <p class=\"text-secondary\">{{product.descripition | text : seeMoreIndex : i}}\r\n                <span *ngIf=\"product.descripition.length > 3\" style=\"cursor:pointer\" class=\"text-danger\"\r\n                  (click)=\"seeMoreIndex = seeMoreIndex == i ? -1 : i\">{{seeMoreIndex == i ? \"less\"\r\n                  : \"more....\"}}</span>\r\n              </p>\r\n              <p>{{product.price | currency}}</p>\r\n              <accordion *ngIf=\"product.sizes.length\" class=\"my-3\" [isAnimated]=\"true\">\r\n                <accordion-group heading=\"Sizes\">\r\n                  <ng-container *ngFor=\"let size of product.sizes \">\r\n                    <div class=\" my-4\">\r\n                      <p>  <span class=\"font-weight-bold\">product size:</span> {{size.size}}</p>\r\n                      <p><span class=\"font-weight-bold\">size price:</span> {{size.price | currency}}</p>\r\n                    </div>\r\n                  </ng-container>\r\n    \r\n                </accordion-group>\r\n    \r\n              </accordion>\r\n              <accordion *ngIf=\"product.toppings.length\" class=\"my-3\" [isAnimated]=\"true\">\r\n                <accordion-group heading=\"Toppings\">\r\n                  <ng-container *ngFor=\"let topping of product.toppings \">\r\n                    <div  *ngFor=\"let size of topping.sizes\" class=\"my-4\">\r\n    \r\n                      <p> <span class=\"font-weight-bold\">topping name : </span> {{topping.topping}}</p>\r\n                      <p> <span class=\"font-weight-bold\">topping price : </span> {{size.price | currency}}</p>\r\n                    </div>\r\n                  </ng-container>\r\n    \r\n                </accordion-group>\r\n    \r\n              </accordion>\r\n    \r\n              <accordion *ngIf=\"product.specialsAdditions.length\" class=\"my-3\" [isAnimated]=\"true\">\r\n               \r\n                <accordion-group heading=\"special Additions\">\r\n                  <ng-container *ngFor=\"let specialsAddition of product.specialsAdditions \">\r\n                    <div>\r\n                      <p><span class=\"font-weight-bold\">addition name:</span> {{specialsAddition.addition}}</p>\r\n                      <div class=\"d-flex \" *ngFor=\"let size of specialsAddition.sizes\">\r\n                        <p class=\"font-weight-bold mr-2\"> {{size.size}} </p>\r\n                        <p>{{size.price | currency}}</p>\r\n                      </div>\r\n                      <hr>\r\n                    </div>\r\n                  </ng-container>\r\n    \r\n                </accordion-group>\r\n    \r\n              </accordion>\r\n          \r\n              <ng-template #template>\r\n    \r\n                <div class=\"modal-body text-center\">\r\n                  <h2 class=\"text-secondary\">\r\n                    <!-- Are you sure you want to remove this product ? -->\r\n                    This function has been disabled to preserve the database\r\n                  </h2>\r\n                  <div class=\"d-flex justify-content-center\">\r\n                    <!-- <button class=\"btn btn-secondary mr-3\" (click)=\"modalRef.hide()\">DISMISS</button>\r\n                    <button class=\"btn btn-success\" (click)=\"deleteProduct(product._id,selectedCategory.products.length,selectedCategory._id,selectedCategory.name);modalRef.hide()\">CONFIRM</button> -->\r\n                    <button class=\"btn btn-success\" (click)=\"modalRef.hide()\">Okay</button>\r\n                  </div>\r\n                  <div class=\"text-center\" *ngIf='loading'>\r\n                    <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n              <button class=\"btn btn-primary mr-3\" \r\n              (click)=\"openModal(deletecategory)\"\r\n              >update</button>\r\n              <i class=\"fas fa-trash-alt\" style=\"font-size: 20px;\" (click)=\"openModal(template)\"></i>\r\n              <!-- (click)=\"updateProduct(product._id,product.category)\" -->\r\n            </div>\r\n    \r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  \r\n  ","import { Component, OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { DashboardService } from 'src/app/services/dashboard.service';\r\n@Component({\r\n  selector: 'app-modify-products',\r\n  templateUrl: './modify-products.component.html',\r\n  styleUrls: ['./modify-products.component.scss']\r\n})\r\nexport class ModifyProductsComponent implements OnInit,OnDestroy {\r\n\r\n  categories:any[]\r\n  seeMoreIndex: number = -1\r\n  modalRef: BsModalRef|any;\r\n  selected:string\r\n  selectedCategory:any\r\n  searchValue:string=\"\"\r\n  deleteProductSub:Subscription\r\n  deletCatSub:Subscription\r\n  getNamesP:Subscription\r\n  getNameC:Subscription\r\n  loading=false\r\n    constructor(private dashboard:DashboardService,\r\n      private toastr: ToastrService,\r\n      private router:Router,\r\n      private modalService: BsModalService,\r\n      private activatedroute:ActivatedRoute) {\r\n      if(this.activatedroute.snapshot.data.categories.hasOwnProperty(\"categories\")) {\r\n        this.categories=this.activatedroute.snapshot.data.categories.categories\r\n        if(this.categories.length) {\r\n          this.selected=this.categories[0].name\r\n          this.selectedCategory=this.categories[0]\r\n        }\r\n      } else {\r\n        this.categories=[]\r\n      }\r\n    \r\n     }\r\n     selectCategory(e:any) {\r\n      if(this.categories.length) {\r\n          for (let i = 0 ; i<this.categories.length;i++) {\r\n             if(this.categories[i].name == e) {\r\n               this.selectedCategory = this.categories[i]\r\n             }\r\n          }\r\n      }\r\n    }\r\n     openModal(template: TemplateRef<any>) {\r\n      this.modalRef = this.modalService.show(template);\r\n    }\r\n    ngOnInit(): void {\r\n    }\r\n  deleteProduct(productId:any,length:any,categoryId:any,categoryName:any) {\r\n    this.loading=true\r\n   this.deleteProductSub = this.dashboard.deleteProduct(productId).subscribe((res:any) => {\r\n      this.loading=false\r\n   this.getNamesP =  this.dashboard.getCategories().subscribe((res:any) => {\r\n          this.categories=res.categories\r\n          this.selectCategory(categoryName)\r\n          if(length==1) { \r\n              this.deleteCategory(categoryId)\r\n          }\r\n      \r\n        this.toastr.success( 'product deleted succesfuly', '', {\r\n          timeOut: 3000,\r\n        });\r\n      }, (err:any) => alert(err.error.message) )\r\n    }, (err:any) => {\r\n      this.loading=false\r\n      alert(err.error.message)\r\n    })\r\n  }\r\n  updateProduct(id:any,name:any) {\r\n    this.router.navigate([\"../dashboard/add\"],{queryParams : {id,name} })\r\n  }\r\n  deleteCategory(id:any) {\r\n    this.loading=true\r\n this.deletCatSub = this.dashboard.deleteCategory(id).subscribe((res:any) => {\r\n   this.loading=false\r\n     this.getNameC = this.dashboard.getCategories().subscribe((res:any) => {\r\n      \r\n  \r\n      if(res.hasOwnProperty(\"categories\")) {\r\n        this.categories=res.categories\r\n        this.selectedCategory=this.categories[0]\r\n        this.selected=this.categories[0].name\r\n      } else {\r\n        this.categories=[]\r\n        this.dashboard.categoriesNames=[]\r\n      }\r\n     \r\n      this.toastr.success( 'category deleted succesfuly', '', {\r\n        timeOut: 3000,\r\n      });\r\n    }, (err:any) => alert(err.error.message) )\r\n   }, (err:any) => {\r\n     this.loading=false\r\n    alert(err.error.message)\r\n   })\r\n  }\r\n  \r\nngOnDestroy() {\r\n  if(this.deleteProductSub) this.deleteProductSub.unsubscribe()\r\n  if(this.getNamesP) this.getNamesP.unsubscribe()\r\n  if(this.deletCatSub) this.deletCatSub.unsubscribe()\r\n  if(this.getNameC) this.getNameC.unsubscribe()\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router, Resolve,\r\n  RouterStateSnapshot,\r\n  ActivatedRouteSnapshot\r\n} from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { OrdersService } from '../services/orders.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersResolver implements Resolve<boolean> {\r\n  constructor(private orders:OrdersService) {}\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):any {\r\n    return this.orders.getOrders()\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminGuard } from 'src/app/guards/admin.guard';\r\nimport { CategoriesResolver } from 'src/app/Resolvers/categories.resolver';\r\nimport { OrdersResolver } from 'src/app/Resolvers/orders.resolver';\r\nimport { AddProductComponent } from './add-product/add-product.component';\r\nimport { GetOrdersComponent } from './get-orders/get-orders.component';\r\nimport { ModifyProductsComponent } from './modify-products/modify-products.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"\",\r\n    component:AddProductComponent,\r\n    canActivate:[AdminGuard],\r\n  },\r\n  {\r\n    path:\"add\",\r\n    component:AddProductComponent,\r\n    canActivate:[AdminGuard],\r\n  },\r\n  {\r\n    path:\"orders\",\r\n    component:GetOrdersComponent,\r\n    canActivate:[AdminGuard],\r\n    resolve:{orders:OrdersResolver}\r\n  },\r\n  {\r\n    path:\"modify\",\r\n    component:ModifyProductsComponent,\r\n    resolve:{categories:CategoriesResolver},\r\n    canActivate:[AdminGuard]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}